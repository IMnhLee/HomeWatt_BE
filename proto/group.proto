syntax = "proto3";

package group;

service GroupService {
    // Create a new group by user
    rpc CreateGroup(CreateGroupRequest) returns (GroupResponse);
    
    // Get all groups (admin only)
    rpc GetAllGroups(GetAllGroupsRequest) returns (GetAllGroupsResponse);
    
    // Get details of a specific group
    rpc GetGroupById(GroupIdRequest) returns (GroupResponse);
    
    // Update an existing group
    rpc UpdateGroup(UpdateGroupRequest) returns (GroupResponse);
    
    // Delete a group
    rpc DeleteGroup(GroupIdRequest) returns (DeleteGroupResponse);
}

// Request message for creating a group
message CreateGroupRequest {
    string name = 1;
    string description = 2;
    UserInfo owner = 3;
}

// Request with user information for authentication
message GetAllGroupsRequest {
    UserInfo user = 1;
}

// Response containing all groups
message GetAllGroupsResponse {
    ResponseStatus status = 1;
    repeated GroupData data = 2;
}

// Request for getting a specific group
message GroupIdRequest {
    string id = 1;
    UserInfo user = 2;
}

// Group update request
message UpdateGroupRequest {
    string id = 1;
    string name = 2;
    string description = 3;
    UserInfo user = 4;
}

message GroupData {
    string id = 1;
    string name = 2;
    string description = 3;
}

// Group response object
message GroupResponse {
    ResponseStatus status = 1;
    optional GroupData data = 2;
}

// Delete response
message DeleteGroupResponse {
    ResponseStatus status = 1;
}

// User information for authentication
message UserInfo {
    string id = 1;
    string role = 2;
    string email = 3;
}

message ResponseStatus {
    int32 code = 1;
    string message = 2;
    optional string error = 3;
}