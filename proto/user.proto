syntax = "proto3";

package user;

service UserService {
    // Get all users
    rpc GetAllUsers (Empty) returns (UsersResponse);

    // Get a user by ID
    rpc GetUserById (UserIdRequest) returns (UserResponse);

    // Get a user by email
    rpc GetUserByEmail (UserEmailRequest) returns (UserResponse);

        // Create a new user
    rpc CreateUser (CreateUserRequest) returns (UserResponse);
  
    // Update a user
    rpc UpdateUser (UpdateUserRequest) returns (UserResponse);
  
    // Delete a user
    rpc DeleteUser (UserIdRequest) returns (DeleteResponse);

    //Validate user
    rpc ValidateUser (ValidateUserRequest) returns (ValidateUserResponse);

    //Update user password
    rpc UpdateUserPassword (UpdateUserPasswordRequest) returns (UserResponse);

    //Forgot password request
    rpc ForgotPassword (ForgotPasswordRequest) returns (ForgotPasswordResponse);

    rpc ResetPassword (ResetPasswordRequest) returns (ResetPasswordResponse);
}

// Empty message for requests that don't need parameters
message Empty {}

// Request with user ID
message UserIdRequest {
    string id = 1;
}

// Request with user email
message UserEmailRequest {
    string email = 1;
}

// Request for creating a user
message CreateUserRequest {
    string email = 1;
    string password = 2;
    string username = 3;
    optional string phoneNumber = 4;
    optional string address = 5;
  // Add additional fields as needed for your CreateUserRequest
}

message UpdateUserData {
    string username = 1;
    optional string phoneNumber = 2;
    optional string address = 3;
    // Các trường cần cập nhật khác
}

// Request for updating a user
message UpdateUserRequest {
    string id = 1;
    UpdateUserData data = 2;
}

// Request for validate user
message ValidateUserRequest {
  string email = 1;
  string password = 2;
}

// User information
message UserInfo {
    string id = 1;
    string email = 2;
    string username = 3;
    string phoneNumber = 4;
    string address = 5;
    string role = 6;
    string googleId = 7;
    string emailCode = 8;
    string createdAt = 9;
    string updatedAt = 10;
}

// Response containing a single user
message UserResponse {
    ResponseStatus status =1;
    optional UserInfo data = 2;
}

// Response containing multiple users
message UsersResponse {
    ResponseStatus status = 1;
    repeated UserInfo data = 2;
}

// Response for delete operation
message DeleteResponse {
    ResponseStatus status = 1;
}

message ValidateUserResponse {
    ResponseStatus status = 1;
    optional UserInfo data = 2;
}

message ResponseStatus {
  // 0: success, khác 0: error code
  int32 code = 1;
  string message = 2;
  optional string error = 3;
}

message UpdateUserPasswordRequest {
    string id = 1;
    string password = 2;
    string currentPassword = 3;
} 

message ForgotPasswordRequest {
    string email = 1;
}

message ForgotPasswordResponse {
    ResponseStatus status = 1;
}

message ResetPasswordRequest {
    string token = 1;
    string email = 2;
    string password = 3;
}

message ResetPasswordResponse {
    ResponseStatus status = 1;
}